version: '3.8'

# Karmacadabra Agent Stack
# Complete agent-to-agent economy for buying/selling AI services
#
# Services:
#   - facilitator: x402 payment facilitator (9000)
#   - validator: Independent validation service (9001)
#   - karma-hello: Chat logs seller (9002)
#   - abracadabra: Transcription seller (9003)
#   - skill-extractor: Skill profiling seller (9004)
#   - voice-extractor: Personality profiling seller (9005)
#
# Usage:
#   docker-compose up -d                    # Start all services
#   docker-compose up facilitator           # Start facilitator only
#   docker-compose up karma-hello           # Start single agent
#   docker-compose logs -f facilitator      # View logs
#   docker-compose down                     # Stop all services

networks:
  karmacadabra:
    driver: bridge

volumes:
  # Shared data volumes
  karma-hello-data:
  abracadabra-data:
  skill-extractor-cache:
  voice-extractor-cache:
  validator-cache:
  facilitator-data:

services:
  # ===========================================================================
  # FACILITATOR (Port 9000)
  # ===========================================================================
  # x402 payment facilitator for gasless micropayments
  # Verifies EIP-3009 signatures and settles transactions on-chain
  facilitator:
    image: ukstv/x402-facilitator:latest
    container_name: karmacadabra-facilitator
    ports:
      - "9000:8080"  # Map internal 8080 to external 9000
    environment:
      - PORT=8080
      - HOST=0.0.0.0
      - RUST_LOG=info
      - SIGNER_TYPE=private-key
      # Avalanche Fuji - Primary network for GLUE token
      - RPC_URL_AVALANCHE_FUJI=https://avalanche-fuji-c-chain-rpc.publicnode.com
      - GLUE_TOKEN_ADDRESS=0x3D19A80b3bD5CC3a4E55D4b5B753bC36d6A44743
      - GLUE_TOKEN_ADDRESS_AVALANCHE_FUJI=0x3D19A80b3bD5CC3a4E55D4b5B753bC36d6A44743
      # Base Sepolia - Optional network for USDC payments (no GLUE deployment)
      - RPC_URL_BASE_SEPOLIA=https://sepolia.base.org
      # Token addresses (auto-configured in code, but can override here)
      - USDC_FUJI_ADDRESS=0x5425890298aed601595a70AB815c96711a31Bc65
      - WAVAX_FUJI_ADDRESS=0xd00ae08403B9bbb9124bB305C09058E32C39A48c
      # EVM_PRIVATE_KEY will be loaded from .env or AWS Secrets Manager
    env_file:
      - x402-rs/.env
    volumes:
      - facilitator-data:/app/data
      - ~/.aws:/root/.aws:ro  # AWS credentials for secrets manager
    networks:
      - karmacadabra
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  # ===========================================================================
  # VALIDATOR AGENT (Port 9001)
  # ===========================================================================
  # Independent validation service using CrewAI
  # Charges 0.001 GLUE per validation
  validator:
    build:
      context: .
      dockerfile: Dockerfile.agent
    container_name: karmacadabra-validator
    ports:
      - "9001:9001"
      - "9090:9090"  # Metrics endpoint
    env_file:
      - agents/validator/.env
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./agents/validator:/app/agent:ro
      - ./shared:/app/shared:ro
      - validator-cache:/app/data
      - validator-cache:/app/validations
      # AWS credentials for secrets manager
      - ~/.aws:/root/.aws:ro
    working_dir: /app/agent
    command: python main.py
    networks:
      - karmacadabra
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ===========================================================================
  # KARMA-HELLO AGENT (Port 9002)
  # ===========================================================================
  # Sells chat logs from Twitch streams
  # Base price: 0.01 GLUE
  karma-hello:
    build:
      context: .
      dockerfile: Dockerfile.agent
    container_name: karmacadabra-karma-hello
    ports:
      - "9002:9002"
    env_file:
      - agents/karma-hello/.env
    environment:
      - PYTHONPATH=/app
      - USE_LOCAL_FILES=true
      - PORT=9002
    volumes:
      - ./agents/karma-hello:/app/agent:ro
      - ./shared:/app/shared:ro
      - ./data/karma-hello:/app/agent/logs:ro  # Read-only product data
      - karma-hello-data:/app/data
      - ~/.aws:/root/.aws:ro
    working_dir: /app/agent
    command: python main.py
    networks:
      - karmacadabra
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ===========================================================================
  # ABRACADABRA AGENT (Port 9003)
  # ===========================================================================
  # Sells transcripts and AI analysis from streams
  # Base price: 0.02 GLUE
  abracadabra:
    build:
      context: .
      dockerfile: Dockerfile.agent
    container_name: karmacadabra-abracadabra
    ports:
      - "9003:9003"
    env_file:
      - agents/abracadabra/.env
    environment:
      - PYTHONPATH=/app
      - USE_LOCAL_FILES=true
      - PORT=9003
    volumes:
      - ./agents/abracadabra:/app/agent:ro
      - ./shared:/app/shared:ro
      - ./data/abracadabra:/app/agent/transcripts:ro  # Read-only product data
      - abracadabra-data:/app/data
      - ~/.aws:/root/.aws:ro
    working_dir: /app/agent
    command: python main.py
    networks:
      - karmacadabra
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ===========================================================================
  # SKILL-EXTRACTOR AGENT (Port 9004)
  # ===========================================================================
  # Buys chat logs from karma-hello, sells skill profiles
  # Price: 0.02-0.50 GLUE depending on tier
  skill-extractor:
    build:
      context: .
      dockerfile: Dockerfile.agent
    container_name: karmacadabra-skill-extractor
    ports:
      - "9004:9004"
    env_file:
      - agents/skill-extractor/.env
    environment:
      - PYTHONPATH=/app
      - PORT=9004
      - KARMA_HELLO_URL=http://karma-hello:9002
    volumes:
      - ./agents/skill-extractor:/app/agent:ro
      - ./shared:/app/shared:ro
      - skill-extractor-cache:/app/data
      - ~/.aws:/root/.aws:ro
    working_dir: /app/agent
    command: python main.py
    networks:
      - karmacadabra
    depends_on:
      - karma-hello
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ===========================================================================
  # VOICE-EXTRACTOR AGENT (Port 9005)
  # ===========================================================================
  # Buys chat logs from karma-hello, sells personality profiles
  # Price: 0.02-0.40 GLUE depending on tier
  voice-extractor:
    build:
      context: .
      dockerfile: Dockerfile.agent
    container_name: karmacadabra-voice-extractor
    ports:
      - "9005:9005"
    env_file:
      - agents/voice-extractor/.env
    environment:
      - PYTHONPATH=/app
      - PORT=9005
      - KARMA_HELLO_URL=http://karma-hello:9002
    volumes:
      - ./agents/voice-extractor:/app/agent:ro
      - ./shared:/app/shared:ro
      - voice-extractor-cache:/app/data
      - ~/.aws:/root/.aws:ro
    working_dir: /app/agent
    command: python main.py
    networks:
      - karmacadabra
    depends_on:
      - karma-hello
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
