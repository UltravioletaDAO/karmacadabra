# =============================================================================
# Caddy Reverse Proxy Configuration for x402 Facilitator
# Karmacadabra - Ultravioleta DAO
# =============================================================================
#
# Purpose: HTTPS reverse proxy for facilitator.ultravioletadao.xyz
# Backend: x402-rs running on localhost:8080 (Docker container)
# Features: Auto HTTPS, rate limiting, logging, CORS
#
# Installation:
#   1. Install Caddy: https://caddyserver.com/docs/install
#   2. Place this file in /etc/caddy/Caddyfile (or your Caddy config dir)
#   3. Reload: sudo systemctl reload caddy
#
# =============================================================================

# Global options
{
    # Email for Let's Encrypt SSL certificates
    email ops@ultravioletadao.xyz

    # Enable admin API
    admin localhost:2019

    # Log to stdout for systemd/Docker
    log {
        output stdout
        format json
        level INFO
    }
}

# Facilitator endpoint
facilitator.ultravioletadao.xyz {
    # Reverse proxy to x402-rs container
    reverse_proxy localhost:8080 {
        # Health checks
        health_uri /health
        health_interval 10s
        health_timeout 5s

        # Load balancing (for future multi-instance setup)
        lb_policy round_robin

        # Preserve original client IP
        header_up X-Real-IP {remote_host}
        header_up X-Forwarded-For {remote_host}
        header_up X-Forwarded-Proto {scheme}
    }

    # CORS headers for agent clients
    header {
        # Allow cross-origin requests from agent endpoints
        Access-Control-Allow-Origin *
        Access-Control-Allow-Methods "GET, POST, OPTIONS"
        Access-Control-Allow-Headers "Content-Type, X-Payment, Authorization"
        Access-Control-Max-Age "3600"

        # Security headers
        X-Content-Type-Options "nosniff"
        X-Frame-Options "DENY"
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"

        # Remove server identification
        -Server
    }

    # Handle OPTIONS preflight requests
    @options {
        method OPTIONS
    }
    respond @options 204

    # Rate limiting (per IP address)
    rate_limit {
        zone facilitator {
            # Unique key per client IP
            key {remote_host}

            # 60 requests per minute (1 req/sec average)
            events 60
            window 1m
        }

        # Return 429 Too Many Requests when exceeded
        on_reject {
            respond "Rate limit exceeded. Please try again later." 429
        }
    }

    # Logging with rotation
    log {
        output file /var/log/caddy/facilitator.log {
            roll_size 100MB
            roll_keep 10
            roll_keep_days 30
        }

        format json {
            time_format "iso8601"
            level_format "upper"
        }

        level INFO
    }

    # Metrics endpoint (Prometheus scraping)
    handle /metrics {
        # Only allow from Grafana server
        @allowed_ips {
            remote_ip 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16
        }
        reverse_proxy @allowed_ips localhost:8080
        respond "Forbidden" 403
    }

    # Health check endpoint (no auth required)
    handle /health {
        reverse_proxy localhost:8080
    }

    # Supported payment methods endpoint (public)
    handle /supported {
        reverse_proxy localhost:8080
    }

    # All other endpoints require proper request
    handle /* {
        reverse_proxy localhost:8080
    }
}

# Optional: Redirect HTTP to HTTPS
http://facilitator.ultravioletadao.xyz {
    redir https://{host}{uri} permanent
}

# =============================================================================
# Testing:
#
# 1. Check config syntax:
#    caddy validate --config /etc/caddy/Caddyfile
#
# 2. Test locally:
#    caddy run --config /etc/caddy/Caddyfile
#
# 3. Test HTTPS:
#    curl -I https://facilitator.ultravioletadao.xyz/health
#
# 4. Test rate limiting:
#    for i in {1..70}; do curl https://facilitator.ultravioletadao.xyz/health; done
#
# 5. View logs:
#    tail -f /var/log/caddy/facilitator.log | jq
#
# =============================================================================
