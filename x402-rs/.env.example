# =============================================================================
# x402-rs Facilitator Configuration for Karmacadabra
# Ultravioleta DAO - Trustless Agent Economy
# =============================================================================
#
# SECURITY WARNING: This is an example file. NEVER commit actual .env files!
# Copy this to .env and fill in real values.
#
# Network: Avalanche Fuji Testnet (Chain ID: 43113)
# Purpose: Payment facilitator for AI agent micropayments
# Deployment: Docker on Cherry Servers (facilitator.ultravioletadao.xyz)
#
# =============================================================================

# -----------------------------------------------------------------------------
# Network Configuration
# -----------------------------------------------------------------------------

# Signer type for transactions (private-key | keystore | ledger)
SIGNER_TYPE=private-key

# Hot wallet private key for gas payments (KEEP SECRET!)
# This wallet pays gas fees for all transferWithAuthorization() calls
# Recommended balance: 1-5 AVAX (enough for 100-500 transactions)
EVM_PRIVATE_KEY=0x0000000000000000000000000000000000000000000000000000000000000000

# Avalanche Fuji RPC endpoints
# Primary: Your custom/private RPC endpoint
RPC_URL_AVALANCHE_FUJI=https://your-custom-rpc.xyz/avalanche-fuji

# Fallback: Public RPC endpoint (used if primary fails)
RPC_URL_AVALANCHE_FUJI_FALLBACK=https://avalanche-fuji-c-chain-rpc.publicnode.com

# Chain ID verification (Fuji testnet)
CHAIN_ID=43113

# -----------------------------------------------------------------------------
# Server Configuration
# -----------------------------------------------------------------------------

# Bind address (0.0.0.0 for Docker, 127.0.0.1 for local dev)
HOST=0.0.0.0

# Port for HTTP server
PORT=8080

# Rust logging level (trace | debug | info | warn | error)
RUST_LOG=info

# -----------------------------------------------------------------------------
# Token Addresses (Avalanche Fuji Testnet)
# -----------------------------------------------------------------------------

# UVD V2 Token (Primary payment token for agent economy)
# This address will be filled after deploying erc-20/UVD_V2.sol
# See: erc-20/deployment.json after running ./deploy-fuji.sh
UVD_TOKEN_ADDRESS=0x0000000000000000000000000000000000000000

# USDC on Fuji (Alternative payment token)
USDC_FUJI_ADDRESS=0x5425890298aed601595a70AB815c96711a31Bc65

# WAVAX on Fuji (Wrapped AVAX, alternative payment token)
WAVAX_FUJI_ADDRESS=0xd00ae08403B9bbb9124bB305C09058E32C39A48c

# -----------------------------------------------------------------------------
# Observability & Monitoring
# -----------------------------------------------------------------------------

# OpenTelemetry Configuration (Prometheus + Grafana + Loki)
# Exports traces, metrics, and logs to Grafana stack
OTEL_EXPORTER_OTLP_ENDPOINT=http://grafana.ultravioletadao.xyz:4317
OTEL_EXPORTER_OTLP_PROTOCOL=grpc
OTEL_SERVICE_NAME=x402-facilitator-karmacadabra
OTEL_SERVICE_VERSION=1.0.0

# Prometheus metrics endpoint (exposed at /metrics)
PROMETHEUS_ENABLED=true

# Log format (json | pretty)
LOG_FORMAT=json

# -----------------------------------------------------------------------------
# Security & Hot Wallet Management
# -----------------------------------------------------------------------------

# Minimum AVAX balance alert threshold (alert when below this)
BALANCE_ALERT_THRESHOLD=1.0

# Standby wallet address (for key rotation every 30 days)
STANDBY_WALLET_ADDRESS=0x0000000000000000000000000000000000000000

# -----------------------------------------------------------------------------
# Rate Limiting (Future Implementation)
# -----------------------------------------------------------------------------

# Enable rate limiting
RATE_LIMIT_ENABLED=false

# Requests per minute per IP
RATE_LIMIT_PER_MINUTE=60

# Requests per hour per IP
RATE_LIMIT_PER_HOUR=1000

# -----------------------------------------------------------------------------
# Webhooks (Future Implementation)
# -----------------------------------------------------------------------------

# Enable webhooks for payment events
WEBHOOKS_ENABLED=false

# Webhook URL for payment notifications
WEBHOOK_URL=https://api.ultravioletadao.xyz/webhooks/payments

# =============================================================================
# Deployment Checklist:
#
# Phase 1 - Initial Setup:
# ☐ Generate hot wallet and save private key to EVM_PRIVATE_KEY
# ☐ Fund hot wallet with 2-5 AVAX for gas
# ☐ Deploy UVD V2 token (cd ../erc-20 && ./deploy-fuji.sh)
# ☐ Update UVD_TOKEN_ADDRESS with deployed address
# ☐ Configure RPC_URL_AVALANCHE_FUJI with your custom RPC
# ☐ Set OTEL_EXPORTER_OTLP_ENDPOINT to your Grafana instance
#
# Phase 2 - Docker Deployment:
# ☐ Copy this file to .env and fill in real values
# ☐ Build Docker image: docker build -t x402-facilitator .
# ☐ Run container: docker run -d --env-file .env -p 8080:8080 x402-facilitator
# ☐ Test /health: curl https://facilitator.ultravioletadao.xyz/health
# ☐ Test /supported: curl https://facilitator.ultravioletadao.xyz/supported
#
# Phase 3 - Observability:
# ☐ Verify metrics at /metrics endpoint
# ☐ Check Grafana dashboard for facilitator metrics
# ☐ Setup alerts for balance < 1 AVAX
# ☐ Setup alerts for high error rate (>5%)
#
# Phase 4 - Production Hardening:
# ☐ Enable rate limiting (RATE_LIMIT_ENABLED=true)
# ☐ Setup key rotation procedure (30 days)
# ☐ Configure webhooks for payment events
# ☐ Load test with 100 req/min
#
# =============================================================================