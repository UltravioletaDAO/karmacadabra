# Base Dockerfile for Python agents
# Used by all Karmacadabra agents (karma-hello, abracadabra, skill-extractor, voice-extractor, validator)

FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Set Python path to include /app for shared module imports
ENV PYTHONPATH=/app

# Copy shared library first (for caching)
COPY shared/ /app/shared/

# Install shared dependencies
RUN pip install --no-cache-dir \
    "web3>=6.0.0" \
    "python-dotenv>=1.0.0" \
    "boto3>=1.28.0" \
    "requests>=2.31.0" \
    "pydantic>=2.0.0" \
    "fastapi>=0.104.0" \
    "uvicorn[standard]>=0.24.0" \
    "crewai>=0.28.0" \
    "openai>=1.3.0"

# Accept agent name and path as build args
ARG AGENT_NAME
ARG AGENT_PATH=agents/${AGENT_NAME}

# Copy agent-specific code
# AGENT_PATH defaults to agents/${AGENT_NAME}
# Works for all agents: validator, karma-hello, abracadabra, skill-extractor, voice-extractor
COPY ${AGENT_PATH}/ /app/

# Copy production data for all agents
# Create directories (note: agents use ../data from /app, so files go in /data not /app/data)
RUN mkdir -p /app/logs /data/karma-hello /transcripts /data/abracadabra /app/scripts

# Copy conversion script
COPY scripts/convert_txt_logs_to_json.py /app/scripts/

# Copy production logs (for karma-hello)
COPY agents/karma-hello/logs/ /app/logs/

# Convert TXT logs to JSON format (output to /data/karma-hello which is ../data/karma-hello from /app)
RUN python3 /app/scripts/convert_txt_logs_to_json.py /app/logs /data/karma-hello || \
    echo "Warning: Log conversion skipped (may not be karma-hello agent)"

# Copy production transcripts (for abracadabra) to /transcripts (../transcripts from /app)
COPY agents/abracadabra/transcripts/ /transcripts/

# Health check (overridden per agent)
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:9000/health || exit 1

# Default command (overridden per agent)
CMD ["python", "main.py"]
